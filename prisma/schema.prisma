// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  teamId        String?
  team          Team?       @relation(fields: [teamId], references: [id])
  roleId        String      @default("user")
  role          Role?       @relation(fields: [roleId], references: [name])
  RequestWl     RequestWl[]
  nbRequest     Int         @default(0)

  @@index([teamId])
  @@index([roleId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Team {
  id   String @id @default(cuid())
  name String
  User User[]
}

model Role {
  name  String @id @unique
  users User[]
}

model RequestWl {
  id         String @id @default(cuid())
  userEmail  String
  user       User   @relation(fields: [userEmail], references: [email])
  firstName   String
  lastName   String
  date       String
  job        String
  jobType    String
  background String @db.Text
  score      Int
  status     String @default("pending")

  @@index([userEmail])
}
